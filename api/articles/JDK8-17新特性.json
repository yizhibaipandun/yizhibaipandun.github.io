{"title":"JDK8-17新特性","uid":"ccce3fa211299e936fe89e1eb7d7281f","slug":"JDK8-17新特性","date":"2023-11-28T10:57:00.000Z","updated":"2023-11-28T13:27:50.756Z","comments":true,"path":"api/articles/JDK8-17新特性.json","keywords":null,"cover":"../images/封面/JDK8-17新特性.jpg","content":"<h1 id=\"JDK8-17新特性\"><a href=\"#JDK8-17新特性\" class=\"headerlink\" title=\"JDK8-17新特性\"></a>JDK8-17新特性</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%9B%AE%E5%BD%95.png\"></p>\n<hr>\n<h2 id=\"如何学习新特性\"><a href=\"#如何学习新特性\" class=\"headerlink\" title=\"如何学习新特性\"></a>如何学习新特性</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%89%B9%E6%80%A7.png\"></p>\n<hr>\n<h2 id=\"Java8新特性简介\"><a href=\"#Java8新特性简介\" class=\"headerlink\" title=\"Java8新特性简介\"></a>Java8新特性简介</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%AE%80%E4%BB%8B1.png\"></p>\n<p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%AE%80%E4%BB%8B2.png\"></p>\n<hr>\n<h2 id=\"Lambda表达式\"><a href=\"#Lambda表达式\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h2><h3 id=\"Lambda表达式的使用举例\"><a href=\"#Lambda表达式的使用举例\" class=\"headerlink\" title=\"Lambda表达式的使用举例\"></a>Lambda表达式的使用举例</h3><p><strong>(o1, o2) -&gt; Integer.compare(o1, o2);</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> compare1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">compare1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//Lambda表达式的写法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">===Lambda表达式的写法===</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> compare2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">23</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">compare2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"Lambda表达式的格式举例\"><a href=\"#Lambda表达式的格式举例\" class=\"headerlink\" title=\"Lambda表达式的格式举例\"></a>Lambda表达式的格式举例</h3><p>Lambda形参列表 -&gt; lambda体</p>\n<h3 id=\"Lambda表达式的格式\"><a href=\"#Lambda表达式的格式\" class=\"headerlink\" title=\"Lambda表达式的格式\"></a>Lambda表达式的格式</h3><p><strong>-&gt;</strong> :\tlambda操作符或箭头操作符</p>\n<p><strong>-&gt;的左边</strong>:\tlambda形参列表，对应着重写的接口中的抽象方法的形参列表。前提是参数顺序一致。</p>\n<p><strong>-&gt;的右边</strong>:\tlambda体，对应着接口的实现类要重写的方法的方法体。</p>\n<h4 id=\"六种语法格式\"><a href=\"#六种语法格式\" class=\"headerlink\" title=\"六种语法格式\"></a>六种语法格式</h4><p>使用lambda表达式和不使用的对比</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">====</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式一：无参，无返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">r2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span></code></pre></div><p><strong>语法格式二：lambda需要一个参数，但是没有返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">con1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><p><strong>语法格式三：数据类型可以省略，因为可由编译器推断得出，称为“类型判断”。</strong></p>\n<p>1、数据类型可省略(对比语法格式二)</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">con2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><p>2、类型推断</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3_1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//int[] arr = new int[]&#123;1,2,3,4&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">&#125;;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #464B5D; font-style: italic\">//类型推断</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> map </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;&gt;();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//类型推断</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entries = map.entrySet();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> entries </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> map</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">entrySet</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//类型推断，在jdk10及之后可以使用</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式四：lambda若只需要一个参数时，参数的小括号可以省略。</strong></p>\n<p>（对比语法格式三）</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test4</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">世界那么大，我想去看看</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式五：lambda需要两个或以上的参数，多条执行语句，并且可以有返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test5</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式六：当lambda体只有一条语句时，return与大括号若有，都可以省略。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test6</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">===lambda表达式===</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"Lambda表达式的本质\"><a href=\"#Lambda表达式的本质\" class=\"headerlink\" title=\"Lambda表达式的本质\"></a>Lambda表达式的本质</h3><p>一方面:\tlambda表达式作为接口的实现类的对象。</p>\n<p>另一方法：\tlambda表达式是一个匿名函数。</p>\n<p>体现了–&gt; “万事万物皆对象”</p>\n<h3 id=\"函数式接口\"><a href=\"#函数式接口\" class=\"headerlink\" title=\"函数式接口\"></a>函数式接口</h3><h4 id=\"1、什么是函数式接口？为什么需要函数式接口？\"><a href=\"#1、什么是函数式接口？为什么需要函数式接口？\" class=\"headerlink\" title=\"1、什么是函数式接口？为什么需要函数式接口？\"></a>1、什么是函数式接口？为什么需要函数式接口？</h4><p>如果接口中<strong>只声明有一个抽象方法</strong>，则此接口就成为函数式接口。</p>\n<p>因为只有给<strong>函数式接口</strong>提供实现类的对象时，我们<strong>才可以使用lambda表达式</strong>。</p>\n<h4 id=\"2、api中函数式接口所在的包\"><a href=\"#2、api中函数式接口所在的包\" class=\"headerlink\" title=\"2、api中函数式接口所在的包\"></a>2、api中函数式接口所在的包</h4><p>jdk8中声明的函数式接口都在<strong>java.util.function</strong>包下。</p>\n<h4 id=\"3、4个基本的函数式接口\"><a href=\"#3、4个基本的函数式接口\" class=\"headerlink\" title=\"3、4个基本的函数式接口\"></a>3、4个基本的函数式接口</h4><table>\n<thead>\n<tr>\n<th>函数式接口</th>\n<th>称谓</th>\n<th>参数类型</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Consumer&lt;T&gt;</strong></td>\n<td>消费型接口</td>\n<td>T</td>\n<td>对类型为T的对象应用操作，包含方法：<strong>void accept(T t)</strong></td>\n</tr>\n<tr>\n<td><strong>Supplier&lt;T&gt;</strong></td>\n<td>供给型接口</td>\n<td>无</td>\n<td>返回类型为T的对象，包含方法：<strong>T get( )</strong></td>\n</tr>\n<tr>\n<td><strong>Function&lt;T, R&gt;</strong></td>\n<td>函数型接口</td>\n<td>T</td>\n<td>对类型为T的对象应用操作，并返回结果。结果是R类型的对象。<br />包含方法：<strong>R accept(T t)</strong></td>\n</tr>\n<tr>\n<td><strong>Predicate&lt;T&gt;</strong></td>\n<td>判断型接口</td>\n<td>T</td>\n<td>确定类型为T的对象是否满足某约束，并返回boolean值。<br />包含方法：<strong>boolean test(T t)</strong></td>\n</tr>\n</tbody></table>\n<h3 id=\"Lambda表达式的语法规则总结\"><a href=\"#Lambda表达式的语法规则总结\" class=\"headerlink\" title=\"Lambda表达式的语法规则总结\"></a>Lambda表达式的语法规则总结</h3><p><strong>-&gt;的左边</strong>：lambda形参列表，参数的类型都可以省略。如果形参只有一个，则一对( )也可以省略。</p>\n<p><strong>-&gt;的右边</strong>：lambda体，对应着重写的方法的方法体。如果方法体种<strong>只有一行执行语句</strong>，则一堆{ }可以省略。<br>如果<strong>有return关键字</strong>，则必须一并省略。</p>\n<hr>\n","feature":true,"text":"JDK8-17新特性...","permalink":"/post/JDK8-17新特性","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"java8","slug":"java8","count":1,"path":"api/categories/java8.json"}],"tags":[{"name":"java","slug":"java","count":2,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK8-17新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">如何学习新特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java8%E6%96%B0%E7%89%B9%E6%80%A7%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">Java8新特性简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">Lambda表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">Lambda表达式的使用举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%A0%BC%E5%BC%8F%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">Lambda表达式的格式举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">Lambda表达式的格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AD%E7%A7%8D%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">六种语法格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">Lambda表达式的本质</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">函数式接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%EF%BC%9F\"><span class=\"toc-text\">1、什么是函数式接口？为什么需要函数式接口？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81api%E4%B8%AD%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%85\"><span class=\"toc-text\">2、api中函数式接口所在的包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%814%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">3、4个基本的函数式接口</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Lambda表达式的语法规则总结</span></a></li></ol></li></ol></li></ol>","author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法学习_数组篇","uid":"929904857381a43e5a2e7edb558ba72e","slug":"算法-数组","date":"2023-11-28T13:34:00.000Z","updated":"2023-11-28T16:22:06.437Z","comments":true,"path":"api/articles/算法-数组.json","keywords":null,"cover":"../images/封面/算法-数组.jpg","text":"本文主要记录算法学习，数组篇章内容。...","permalink":"/post/算法-数组","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"算法","slug":"算法","count":1,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}},"feature":true},"next_post":{"title":"正则表达式","uid":"03a1af7058cec8bb8efe418ed228e157","slug":"正则表达式","date":"2023-11-25T17:20:00.000Z","updated":"2023-11-27T16:53:51.398Z","comments":true,"path":"api/articles/正则表达式.json","keywords":null,"cover":"../images/封面/正则表达式.jpg","text":"本文主要记录Java中正则表达式的学习内容。...","permalink":"/post/正则表达式","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"正则表达式","slug":"正则表达式","count":1,"path":"api/categories/正则表达式.json"}],"tags":[{"name":"java","slug":"java","count":2,"path":"api/tags/java.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}},"feature":true}}