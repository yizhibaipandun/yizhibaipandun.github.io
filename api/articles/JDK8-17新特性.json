{"title":"JDK8-17新特性","uid":"ccce3fa211299e936fe89e1eb7d7281f","slug":"JDK8-17新特性","date":"2023-11-28T10:57:00.000Z","updated":"2023-12-04T13:32:07.926Z","comments":true,"path":"api/articles/JDK8-17新特性.json","keywords":null,"cover":"../images/封面/JDK8-17新特性.jpg","content":"<h1 id=\"JDK8-17新特性\"><a href=\"#JDK8-17新特性\" class=\"headerlink\" title=\"JDK8-17新特性\"></a>JDK8-17新特性</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%9B%AE%E5%BD%95.png\"></p>\n<hr>\n<h2 id=\"如何学习新特性\"><a href=\"#如何学习新特性\" class=\"headerlink\" title=\"如何学习新特性\"></a>如何学习新特性</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%89%B9%E6%80%A7.png\"></p>\n<hr>\n<h2 id=\"Java8新特性简介\"><a href=\"#Java8新特性简介\" class=\"headerlink\" title=\"Java8新特性简介\"></a>Java8新特性简介</h2><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%AE%80%E4%BB%8B1.png\"></p>\n<p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E7%AE%80%E4%BB%8B2.png\"></p>\n<hr>\n<h2 id=\"Lambda表达式\"><a href=\"#Lambda表达式\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h2><h3 id=\"Lambda表达式的使用举例\"><a href=\"#Lambda表达式的使用举例\" class=\"headerlink\" title=\"Lambda表达式的使用举例\"></a>Lambda表达式的使用举例</h3><p><strong>(o1, o2) -&gt; Integer.compare(o1, o2);</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> compare1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">compare1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//Lambda表达式的写法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">===Lambda表达式的写法===</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> compare2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">23</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">compare2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"Lambda表达式的格式举例\"><a href=\"#Lambda表达式的格式举例\" class=\"headerlink\" title=\"Lambda表达式的格式举例\"></a>Lambda表达式的格式举例</h3><p>Lambda形参列表 -&gt; lambda体</p>\n<h3 id=\"Lambda表达式的格式\"><a href=\"#Lambda表达式的格式\" class=\"headerlink\" title=\"Lambda表达式的格式\"></a>Lambda表达式的格式</h3><p><strong>-&gt;</strong> :\tlambda操作符或箭头操作符</p>\n<p><strong>-&gt;的左边</strong>:\tlambda形参列表，对应着重写的接口中的抽象方法的形参列表。前提是参数顺序一致。</p>\n<p><strong>-&gt;的右边</strong>:\tlambda体，对应着接口的实现类要重写的方法的方法体。</p>\n<h4 id=\"六种语法格式\"><a href=\"#六种语法格式\" class=\"headerlink\" title=\"六种语法格式\"></a>六种语法格式</h4><p><strong>举例：</strong>使用lambda表达式和不使用的对比</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Runnable</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">====</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式一：无参，无返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Runnable</span><span style=\"color: #BABED8\"> r2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">r2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">();</span></span></code></pre></div><p><strong>语法格式二：lambda需要一个参数，但是没有返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">con1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><p><strong>语法格式三：数据类型可以省略，因为可由编译器推断得出，称为“类型判断”。</strong></p>\n<p>1、数据类型可省略(对比语法格式二)</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">con2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><p>2、类型推断</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3_1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//int[] arr = new int[]&#123;1,2,3,4&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">&#125;;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #464B5D; font-style: italic\">//类型推断</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> map </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;&gt;();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//类型推断</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entries = map.entrySet();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> entries </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> map</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">entrySet</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//类型推断，在jdk10及之后可以使用</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式四：lambda若只需要一个参数时，参数的小括号可以省略。</strong></p>\n<p>（对比语法格式三）</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test4</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">世界那么大，我想去看看</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式五：lambda需要两个或以上的参数，多条执行语句，并且可以有返回值。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test5</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>语法格式六：当lambda体只有一条语句时，return与大括号若有，都可以省略。</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test6</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">===lambda表达式===</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"Lambda表达式的本质\"><a href=\"#Lambda表达式的本质\" class=\"headerlink\" title=\"Lambda表达式的本质\"></a>Lambda表达式的本质</h3><p>一方面:\tlambda表达式作为接口的实现类的对象。</p>\n<p>另一方法：\tlambda表达式是一个匿名函数。</p>\n<p>体现了–&gt; “万事万物皆对象”</p>\n<h3 id=\"函数式接口\"><a href=\"#函数式接口\" class=\"headerlink\" title=\"函数式接口\"></a>函数式接口</h3><h4 id=\"1、什么是函数式接口？为什么需要函数式接口？\"><a href=\"#1、什么是函数式接口？为什么需要函数式接口？\" class=\"headerlink\" title=\"1、什么是函数式接口？为什么需要函数式接口？\"></a>1、什么是函数式接口？为什么需要函数式接口？</h4><p>如果接口中<strong>只声明有一个抽象方法</strong>，则此接口就成为函数式接口。</p>\n<p>因为只有给<strong>函数式接口</strong>提供实现类的对象时，我们<strong>才可以使用lambda表达式</strong>。</p>\n<h4 id=\"2、api中函数式接口所在的包\"><a href=\"#2、api中函数式接口所在的包\" class=\"headerlink\" title=\"2、api中函数式接口所在的包\"></a>2、api中函数式接口所在的包</h4><p>jdk8中声明的函数式接口都在<strong>java.util.function</strong>包下。</p>\n<h4 id=\"3、4个基本的函数式接口\"><a href=\"#3、4个基本的函数式接口\" class=\"headerlink\" title=\"3、4个基本的函数式接口\"></a>3、4个基本的函数式接口</h4><table>\n<thead>\n<tr>\n<th>函数式接口</th>\n<th>称谓</th>\n<th>参数类型</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Consumer&lt;T&gt;</strong></td>\n<td>消费型接口</td>\n<td>T</td>\n<td>对类型为T的对象应用操作，包含方法：<strong>void accept(T t)</strong></td>\n</tr>\n<tr>\n<td><strong>Supplier&lt;T&gt;</strong></td>\n<td>供给型接口</td>\n<td>无</td>\n<td>返回类型为T的对象，包含方法：<strong>T get( )</strong></td>\n</tr>\n<tr>\n<td><strong>Function&lt;T, R&gt;</strong></td>\n<td>函数型接口</td>\n<td>T</td>\n<td>对类型为T的对象应用操作，并返回结果。结果是R类型的对象。<br />包含方法：<strong>R accept(T t)</strong></td>\n</tr>\n<tr>\n<td><strong>Predicate&lt;T&gt;</strong></td>\n<td>判断型接口</td>\n<td>T</td>\n<td>确定类型为T的对象是否满足某约束，并返回boolean值。<br />包含方法：<strong>boolean test(T t)</strong></td>\n</tr>\n</tbody></table>\n<h3 id=\"Lambda表达式的语法规则总结\"><a href=\"#Lambda表达式的语法规则总结\" class=\"headerlink\" title=\"Lambda表达式的语法规则总结\"></a>Lambda表达式的语法规则总结</h3><p><strong>-&gt;的左边</strong>：lambda形参列表，参数的类型都可以省略。如果形参只有一个，则一对( )也可以省略。</p>\n<p><strong>-&gt;的右边</strong>：lambda体，对应着重写的方法的方法体。如果方法体种<strong>只有一行执行语句</strong>，则一堆{ }可以省略。<br>如果<strong>有return关键字</strong>，则必须一并省略。</p>\n<hr>\n<h2 id=\"方法引用\"><a href=\"#方法引用\" class=\"headerlink\" title=\"方法引用\"></a>方法引用</h2><h3 id=\"方法引用举例\"><a href=\"#方法引用举例\" class=\"headerlink\" title=\"方法引用举例\"></a>方法引用举例</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Integer </span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\"> compare</span></span></code></pre></div><h3 id=\"方法引用的理解\"><a href=\"#方法引用的理解\" class=\"headerlink\" title=\"方法引用的理解\"></a>方法引用的理解</h3><p>1、方法引用，可以看做是基于lambda表达式的进一步刻画。（没有lambda表达式就没有方法引用）</p>\n<p>2、当需要提供一个函数式接口的实例时，我们可以使用lambda表达式提供此实例。</p>\n<p>3、当满足一定条件的情况下，我们还可以使用方法引用或构造器引用替换lambda表达式</p>\n<h3 id=\"方法引用的本质\"><a href=\"#方法引用的本质\" class=\"headerlink\" title=\"方法引用的本质\"></a>方法引用的本质</h3><p>方法引用作为了函数式接口的实例。 –&gt; “万事万物皆对象”</p>\n<h3 id=\"方法引用的格式\"><a href=\"#方法引用的格式\" class=\"headerlink\" title=\"方法引用的格式\"></a>方法引用的格式</h3><p>格式：<strong>类(或对象) :: 方法名</strong></p>\n<p>举例演示①不用lambda表达式（匿名类）②使用lambda表达式③使用方法引用</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    con1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. lambda表达式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    con2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//3. 方法引用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Consumer</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> con3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    con3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">accept</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>输出结果</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">hello</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hello</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hello</span></span></code></pre></div><h4 id=\"情况1：对象-实例方法-非-静态方法\"><a href=\"#情况1：对象-实例方法-非-静态方法\" class=\"headerlink\" title=\"情况1：对象 :: 实例方法 (非)静态方法\"></a>情况1：对象 :: 实例方法 (非)静态方法</h4><p><strong>要求：</strong>函数式接口中的抽象方法a与其内部实现时调用的<strong>对象</strong>的某个方法b的<strong>形参列表</strong>和<strong>返回值类型都相同（或一致-满足多态场景，如自动装箱和自动拆箱）</strong>。此时，可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为<strong>方法引用</strong>。</p>\n<p><strong>注意</strong>：此方法b是<strong>非静态方法</strong>，需要<strong>对象</strong>调用。</p>\n<p><strong>举例</strong>：匿名方法返回值类型String和actor.getName的返回值类型是一样的，而且都是无参的方法。因此可写成 actor::getName( )。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Actor</span><span style=\"color: #BABED8\"> actor </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Actor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1001</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">运动员</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sup1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> actor</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sup1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. lambda表达式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sup2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> actor</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sup2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//3. 方法引用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sup3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> actor</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sup3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"情况2：类-静态方法\"><a href=\"#情况2：类-静态方法\" class=\"headerlink\" title=\"情况2：类 :: 静态方法\"></a>情况2：类 :: 静态方法</h4><p><strong>要求：</strong>函数式接口中的抽象方法a与其内部实现时调用的<strong>类</strong>的某个方法b的<strong>形参列表</strong>和<strong>返回值类型都相同（或一致）</strong>。此时，可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为<strong>方法引用</strong>。</p>\n<p><strong>注意</strong>：此方法b是<strong>静态方法</strong>，需要<strong>类</strong>调用。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. lambda表达式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">34</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//3. 方法引用 类::静态方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">compare</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">34</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">34</span><span style=\"color: #89DDFF\">));;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"情况3：类-实例方法\"><a href=\"#情况3：类-实例方法\" class=\"headerlink\" title=\"情况3：类 :: 实例方法\"></a>情况3：类 :: 实例方法</h4><p><strong>要求：</strong>函数式接口中的抽象方法a与其内部实现时调用的<strong>对象</strong>的某个方法b的<strong>返回值类型相同</strong>。同时，<strong>抽象方法a中有n个参数，方法b中有n-1个参数</strong>，且<strong>抽象方法a</strong>的<strong>第1个参数作为方法b的调用者</strong>，且<strong>抽象方法a的后n-1个参数与方法b的n-1个参数的类型相同（或一致）</strong>。则可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为<strong>方法引用</strong>。</p>\n<p><strong>注意：</strong>此方法b是非静态的方法，需要对象调用。但是形式上，写出对象a所属的类。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test4</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">o2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> o1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">o2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abd</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. lambda表达式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> s2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> s1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abb</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//3. 方法引用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Comparator</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> com3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> String</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">compareTo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">com3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abb</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"构造器引用、数组引用\"><a href=\"#构造器引用、数组引用\" class=\"headerlink\" title=\"构造器引用、数组引用\"></a>构造器引用、数组引用</h2><h3 id=\"构造器引用\"><a href=\"#构造器引用\" class=\"headerlink\" title=\"构造器引用\"></a>构造器引用</h3><h4 id=\"构造器引用格式\"><a href=\"#构造器引用格式\" class=\"headerlink\" title=\"构造器引用格式\"></a>构造器引用格式</h4><p><strong>类名 :: new</strong></p>\n<h4 id=\"构造器引用说明\"><a href=\"#构造器引用说明\" class=\"headerlink\" title=\"构造器引用说明\"></a>构造器引用说明</h4><p>1、调用了类名对应的类中的某一个确定的构造器</p>\n<p>2、具体调用的是类中的哪一个构造器<strong>取决于函数式接口的抽象方法的形参列表</strong>！</p>\n<h4 id=\"构造器引用举例\"><a href=\"#构造器引用举例\" class=\"headerlink\" title=\"构造器引用举例\"></a>构造器引用举例</h4><p>调用的是Employee类中<strong>空参</strong>的构造器</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sup1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> Employee</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sup1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. 构造器引用 调用的是Employee类中空参的构造器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Supplier</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sup2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Employee</span><span style=\"color: #89DDFF; font-style: italic\">::new</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>调用的是Employee类中<strong>参数是Integer&#x2F;int类型</strong>的构造器</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 常规匿名类</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> func1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">id</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Employee</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">id</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">func1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. 构造器引用 调用的是Employee类中参数是Integer/int类型的构造器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> func2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Employee</span><span style=\"color: #89DDFF; font-style: italic\">::new</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"数组引用\"><a href=\"#数组引用\" class=\"headerlink\" title=\"数组引用\"></a>数组引用</h3><p><strong>数组引用格式</strong>：数组名[ ] :: new</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test4</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[]&gt;</span><span style=\"color: #BABED8\"> func1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[]&gt;()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">@</span><span style=\"color: #C792EA\">Override</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">integer</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">func1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2.</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Function</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[]&gt;</span><span style=\"color: #BABED8\"> func2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">func2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">apply</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h2 id=\"Stream-API\"><a href=\"#Stream-API\" class=\"headerlink\" title=\"Stream API\"></a>Stream API</h2><h3 id=\"Stream-API说明\"><a href=\"#Stream-API说明\" class=\"headerlink\" title=\"Stream API说明\"></a>Stream API说明</h3><p>![](..&#x2F;images&#x2F;java&#x2F;JDK8-17新特性&#x2F;Stream API说明.png)</p>\n<h3 id=\"为什么要使用Stream-API\"><a href=\"#为什么要使用Stream-API\" class=\"headerlink\" title=\"为什么要使用Stream API\"></a>为什么要使用Stream API</h3><p>实际开发中，项目中多数数据源都来自于MySQL，Oracle等，但现在数据源可以更多了，有MongDB，Radis等，而这些NoSQL的数据就需要Java层面去处理。</p>\n<h3 id=\"Stream-API-vs-集合框架\"><a href=\"#Stream-API-vs-集合框架\" class=\"headerlink\" title=\"Stream API vs 集合框架\"></a>Stream API vs 集合框架</h3><p>1、Stream API 关注的是多个数据的计算（排序、查找、过滤、映射、遍历等），面向CPU的。</p>\n<p>2、集合关注的是数据的存储，面向内存的。</p>\n<p>3、Stream API之于集合，类似于SQL之于数据表的查询。</p>\n<h3 id=\"Stream使用说明\"><a href=\"#Stream使用说明\" class=\"headerlink\" title=\"Stream使用说明\"></a>Stream使用说明</h3><p>1、Stream自己不会存储元素。</p>\n<p>2、Stream不会改变源对象。相反，他们会返回一个持有结果的新Stream。</p>\n<p>3、Stream操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。即一旦执行终止操作，就执行中间操作链，并产生结果。</p>\n<p>4、Stream一旦执行了终止操作，就不能再调用其他中间操作或终止操作了。</p>\n<h3 id=\"Stream执行流程\"><a href=\"#Stream执行流程\" class=\"headerlink\" title=\"Stream执行流程\"></a>Stream执行流程</h3><p>步骤1：Stream的实例化</p>\n<p>步骤2：一系列的中间操作</p>\n<p>步骤3：执行终止操作</p>\n<p>![](..&#x2F;images&#x2F;java&#x2F;JDK8-17新特性&#x2F;Stream API步骤.png)</p>\n<h4 id=\"Stream的实例化\"><a href=\"#Stream的实例化\" class=\"headerlink\" title=\"Stream的实例化\"></a>Stream的实例化</h4><h5 id=\"创建Stream方式一：通过集合\"><a href=\"#创建Stream方式一：通过集合\" class=\"headerlink\" title=\"创建Stream方式一：通过集合\"></a>创建Stream方式一：通过集合</h5><p>default Stream&lt;E&gt; stream(): 返回一个顺序流</p>\n<p>default Stream&lt;E&gt; parallelStream(): 返回一个并行流</p>\n<p>代码举例</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//default Stream&lt;E&gt; stream(): 返回一个顺序流</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Stream</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> stream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//default Stream&lt;E&gt; parallelStream(): 返回一个并行流</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Stream</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> stream1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">parallelStream</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">stream</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//打印的是地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">stream1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"创建Stream方式二：通过数组\"><a href=\"#创建Stream方式二：通过数组\" class=\"headerlink\" title=\"创建Stream方式二：通过数组\"></a>创建Stream方式二：通过数组</h5><p>调用Arrays类的static &lt;T&gt; Stream&lt;T&gt; stream(T[ ] array)：返回一个流</p>\n<p>代码举例</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//调用Arrays类的static \\&lt;T&gt; Stream\\&lt;T&gt; stream(T[ ] array)：返回一个流</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">[]&#123;</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Stream</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> stream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]&#123;</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">IntStream</span><span style=\"color: #BABED8\"> stream1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"创建Stream方式三：通过Stream的of\"><a href=\"#创建Stream方式三：通过Stream的of\" class=\"headerlink\" title=\"创建Stream方式三：通过Stream的of( )\"></a>创建Stream方式三：通过Stream的of( )</h5><p>使用Stream的静态方法of( )</p>\n<p>代码举例\t</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Stream</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> stream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Stream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">of</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">AA</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">BB</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">CC</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">SS</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">DD</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"一系列中间操作\"><a href=\"#一系列中间操作\" class=\"headerlink\" title=\"一系列中间操作\"></a>一系列中间操作</h4><p>多个中间操作可以连接起来形成一个流水线，除非流水线上触发终止操作，否则中间操作不会执行任何的处理而在终止操作时一次性全部处理，称为“惰性求值”。</p>\n<h5 id=\"1、筛选与切片\"><a href=\"#1、筛选与切片\" class=\"headerlink\" title=\"1、筛选与切片\"></a><strong>1、筛选与切片</strong></h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>filter(Predicatep)</strong></td>\n<td>接收Lambda，从流中排除某些元素</td>\n</tr>\n<tr>\n<td><strong>distinct()</strong></td>\n<td>筛选，通过流所生成元素的hashCode()和equals()去除重复元素</td>\n</tr>\n<tr>\n<td><strong>limit(long maxSize)</strong></td>\n<td>截断流，使其元素不超过给定数量</td>\n</tr>\n<tr>\n<td><strong>skip(long n)</strong></td>\n<td>跳过元素，返回一个扔掉了前n个元素的流。<br />若流中元素不足n个，则返回一个空流。与limit(n)互补</td>\n</tr>\n</tbody></table>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//1、filter(Predicate p) 接收Lambda，从流中排除某些元素。</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//练习: 查询员工表中薪资大于7000的员工信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Stream</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> stream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//Lambda表达式: emp -&gt; emp.getSalary() &gt; 7000</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//方法引用: System.out::println</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        stream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">7000</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//2、limit(n) 截断流，使其元素不超过给定数量。</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//错误的执行。因为Stream已经执行了终止操作，就不可以再调用其他的中间操作或终止操作了</span></span>\n<span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//        stream.limit(2).forEach(System.out::println);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">limit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//3、skip(n) 跳过元素，返回一个扔掉了前n个元素的流。若流中元素不足n个，则返回一个空流。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">skip</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//4、distinct() 筛选，通过流所生成(重写过)元素的hashCode()和equals()去除重复元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">distinct</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"2、映射\"><a href=\"#2、映射\" class=\"headerlink\" title=\"2、映射\"></a><strong>2、映射</strong></h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>map(Function f)</strong></td>\n<td>接收一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新的元素。</td>\n</tr>\n<tr>\n<td><strong>mapToDouble(ToDoubleFunction f)</strong></td>\n<td>接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的DoubleStream。</td>\n</tr>\n<tr>\n<td><strong>mapToInt(ToIntFunction f)</strong></td>\n<td>接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的IntStream。</td>\n</tr>\n<tr>\n<td><strong>mapToLong(ToLongFunction f)</strong></td>\n<td>接收一个函数作为参数，该函数会被应用到每个元素上，产生一个新的LongStream。</td>\n</tr>\n<tr>\n<td><strong>flatMap(Function f)</strong></td>\n<td>接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接成一个流。</td>\n</tr>\n</tbody></table>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//map(Function f) 接收一个函数作为参数，将元素转换成其他形式或提取信息，该函数会被应用到每个元素</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习: 转换成大写</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">asList</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">aa</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">bb</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">cc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">dd</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//方式1: Lambda表达式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> str</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toUpperCase</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//方式2: 方法引用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">String</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">toUpperCase</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//获取员工姓名长度大于3的员工(没有用到映射)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> employees </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习: 获取员工姓名长度大于3的员工的姓名(映射到name)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//第一种：先过滤，再映射</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//第二种：先映射，再过滤 (因为映射完之后只有name这一列，所有lambda表达式变成了name-&gt;name.length()&gt;3)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">name </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> name</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//第三种：将映射的部分改成方法引用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Employee</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">getName</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">name </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> name</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"3、排序\"><a href=\"#3、排序\" class=\"headerlink\" title=\"3、排序\"></a><strong>3、排序</strong></h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>sorted()</strong></td>\n<td>产生一个新流，其中按自然顺序排序</td>\n</tr>\n<tr>\n<td><strong>sorted(Comparator com)</strong></td>\n<td>产生一个新流，其中按比较器顺序排序</td>\n</tr>\n</tbody></table>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//sorted() 自然排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">[]&#123;</span><span style=\"color: #F78C6C\">345</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">64</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">46</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> arr1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]&#123;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">GG</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">DD</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">MM</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">SS</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">JJ</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">));</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//arr数组并没有因为升序，做调整。</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr1</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//因为Employee没有实现Comparable接口,所有报错</span></span>\n<span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//        List&lt;Employee&gt; list = EmployeeData.getEmployees();</span></span>\n<span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//        list.stream().sorted().forEach(System.out::println);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//sorted(Comparator com) 定制排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">e2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> e1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//针对字符串从大小排列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr1</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">s1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> s1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compareTo</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s2</span><span style=\"color: #89DDFF\">)).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr1</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">String</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">compareTo</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"终止操作\"><a href=\"#终止操作\" class=\"headerlink\" title=\"终止操作\"></a>终止操作</h4><p>1、终端操作会从流的流水线生成结果。其结果可以是任何不是流的值，例如：List、Integer，甚至是void。</p>\n<p>2、流进行了终止操作后，不能再次使用。</p>\n<h5 id=\"1、匹配与查找\"><a href=\"#1、匹配与查找\" class=\"headerlink\" title=\"1、匹配与查找\"></a>1、匹配与查找</h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>allMatch(Predicate p)</strong></td>\n<td>检查是否匹配所有元素</td>\n</tr>\n<tr>\n<td><strong>anyMatch(Predicate p)</strong></td>\n<td>检查是否至少匹配一个元素</td>\n</tr>\n<tr>\n<td><strong>noneMatch(Predicate p)</strong></td>\n<td>检查是否没有匹配所有元素</td>\n</tr>\n<tr>\n<td><strong>findFirst()</strong></td>\n<td>返回第一个元素</td>\n</tr>\n<tr>\n<td><strong>findAny()</strong></td>\n<td>返回当前流中的任意元素</td>\n</tr>\n<tr>\n<td><strong>count()</strong></td>\n<td>返回流中元素总数</td>\n</tr>\n<tr>\n<td><strong>max(Comparator c)</strong></td>\n<td>返回流中最大值</td>\n</tr>\n<tr>\n<td><strong>min(Comparator c)</strong></td>\n<td>返回流中最小值</td>\n</tr>\n<tr>\n<td><strong>forEach(Consumer c)</strong></td>\n<td>内部迭代(使用 Collection接口需要用户去做迭代，称为外部迭代。<br />相反，Stream API使用内部迭代–它帮你把迭代做了)</td>\n</tr>\n</tbody></table>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//匹配与查找</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//allMatch(Predicate p) 检查是否匹配所有元素</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：是否所有员工的年龄都大于18</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">allMatch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAge</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//anyMatch(Predicate p) 检查是否至少匹配一个元素</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：是否存在年龄大于18岁的员工</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">anyMatch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAge</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：是否存在员工的工资大于10000</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">anyMatch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//findFirst 返回第一个元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">findFirst</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//count 返回流中工资大于7000元素的总个数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">7000</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">count</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//max(Comparator c) 返回流中最大值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：返回最高工资的员工</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">max</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Double</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">())));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：返回最高的工资</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//方式1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">max</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Double</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">())).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//方式2</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">max</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">salary1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> salary2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Double</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">salary1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> salary2</span><span style=\"color: #89DDFF\">)).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">max</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Double</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">compare</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//min(Comparator c) 返回流中最小值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习：返回最低工资的员工</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">min</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Double</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">compare</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">())));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//forEach(Consumer c) 内部迭代</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//针对集合，jdk8中增加了一个遍历的方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//针对List来说，遍历的方法：①使用Iterator ②增强for ③一般for ④forEach()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"2、归约\"><a href=\"#2、归约\" class=\"headerlink\" title=\"2、归约\"></a>2、归约</h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>reduce(T indentity, BinaryOperator b)</strong></td>\n<td>可以将流中元素反复结合起来，得到一个值。返回T</td>\n</tr>\n<tr>\n<td><strong>reduce(BinaryOperator b)</strong></td>\n<td>可以将流中元素反复结合起来，得到一个值。返回Optional&lt;T&gt;</td>\n</tr>\n</tbody></table>\n<p>备注：map和reduce的连接通常称为map-reduce模式，因Google用它来进行网络搜索而出名。</p>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//reduce(T indentity, BinaryOperator) 可以将流中元素反复结合起来，得到一个值。返回T</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习1：计算1-10的自然数的和</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">asList</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">8</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> x1 </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">));</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//55</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">)));</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//55</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">sum</span><span style=\"color: #89DDFF\">));</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//55</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> x1 </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> x2</span><span style=\"color: #89DDFF\">));</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//65</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//reduce(BinaryOperator) 可以将流中元素反复结合起来，得到一个值。返回 Optional&lt;T&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习2：计算公司所有员工工资的总和</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> employeeList </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">employeeList</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">salary1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> salary2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">salary1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> salary2</span><span style=\"color: #89DDFF\">)));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">employeeList</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">reduce</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Integer</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">sum</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"3、收集\"><a href=\"#3、收集\" class=\"headerlink\" title=\"3、收集\"></a>3、收集</h5><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>collect(Collector c)</strong></td>\n<td>将流转换为其他形式。接收一个Collector接口的实现，<br />用于给Stream中元素做汇总的方法</td>\n</tr>\n</tbody></table>\n<p>Collector接口中方法的实现决定了如何对流执行收集的操作(如收集到List、Set、Map)。</p>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> EmployeeData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getEmployees</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//collect(Collector c) 将流转换为其他形式。接收一个Collector接口的实现，用于给Stream中元素做汇总的方法</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习1：查找工资大于6000的员工，结果返回为一个List或Set</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">filter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">emp </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> emp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSalary</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6000</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">collect</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Collectors</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toList</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//源数据并不会改变</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//练习2：按照员工的年龄进行排序，返回到一个新的list中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">List</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Employee</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> list2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">sorted</span><span style=\"color: #89DDFF\">((</span><span style=\"color: #BABED8\">e1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> e1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAge</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> e2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAge</span><span style=\"color: #89DDFF\">()).</span><span style=\"color: #82AAFF\">collect</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Collectors</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toList</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    list2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF; font-style: italic\">::</span><span style=\"color: #BABED8\">println</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h2 id=\"新语法结构\"><a href=\"#新语法结构\" class=\"headerlink\" title=\"新语法结构\"></a>新语法结构</h2><h3 id=\"异常处理之try-catch资源关闭\"><a href=\"#异常处理之try-catch资源关闭\" class=\"headerlink\" title=\"异常处理之try-catch资源关闭\"></a>异常处理之try-catch资源关闭</h3><h4 id=\"JDK7的新特性\"><a href=\"#JDK7的新特性\" class=\"headerlink\" title=\"JDK7的新特性\"></a><strong>JDK7的新特性</strong></h4><p>在try后面可以增加一个( )，在括号中可以声明流对象并初始化。try中的代码执行完毕，会自动把流对象释放，就不用写finally了。</p>\n<p><strong>格式：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">资源对象的声明和初始化</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    业务逻辑代码，可能会产生异常</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">异常类型1 </span><span style=\"color: #C792EA\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    处理异常代码</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">异常类型2 </span><span style=\"color: #C792EA\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    处理异常代码</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>原本写法</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">FileWriter</span><span style=\"color: #BABED8\"> fw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">BufferedWriter</span><span style=\"color: #BABED8\"> bw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileWriter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">test.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        bw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BufferedWriter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">fw</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        bw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好世界</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bw </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                bw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>新特性写法</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">FileWriter</span><span style=\"color: #BABED8\"> fw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">BufferedWriter</span><span style=\"color: #BABED8\"> bw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">FileWriter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">test.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        bw </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">BufferedWriter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">fw</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        bw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">你好世界</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printStackTrace</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bw </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                bw</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">close</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">IOException</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">throw</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RuntimeException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"JDK9的新特性\"><a href=\"#JDK9的新特性\" class=\"headerlink\" title=\"JDK9的新特性\"></a>JDK9的新特性</h4><p>try的前面可以定义流对象，try后面的( )中可以直接引用流对象的名称。在try代码执行完毕后，流对象也可以释放掉，也不用写finally了。</p>\n<p><strong>格式：</strong></p>\n<p>a，b是final的，不可再被赋值。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">A</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">A</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">B</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">B</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    可能产生的异常代码</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">异常类名 变量名</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    异常处理的逻辑</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"局部变量类型推断\"><a href=\"#局部变量类型推断\" class=\"headerlink\" title=\"局部变量类型推断\"></a>局部变量类型推断</h3><p>JDK10新特性</p>\n<p><strong>可以使用的场景</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 局部变量的实例化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">ArrayList</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> set </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">LinkedHashSet</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//2. 增强for循环中的索引</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> r </span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\"> list</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//3. 传统for循环中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//4. 返回值类型含复杂泛型结构</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> iterator </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> set</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">iterator</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">Integer</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> map </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">HashMap</span><span style=\"color: #89DDFF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> entries </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> map</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">entrySet</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>不可以使用的场景</strong></p>\n<p>1、声明一个成员变量</p>\n<p>2、声明一个数组变量，并为数组静态初始化（省略new的情况下）</p>\n<p>3、方法的返回值类型</p>\n<p>4、方法的参数类型</p>\n<p>5、没有初始化的方法内的局部变量声明</p>\n<p>6、作为catch块中异常类型</p>\n<p>7、Lambda表达式中函数式接口的类型</p>\n<p>8、方法引用中函数式接口的类型</p>\n<h3 id=\"instanceof模式匹配\"><a href=\"#instanceof模式匹配\" class=\"headerlink\" title=\"instanceof模式匹配\"></a>instanceof模式匹配</h3><p>原本写法-java14之前</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test1</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Object</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello.java14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">obj </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> String</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> str </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">String</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> obj</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Java</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">非String类型</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>新写法-java14中</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Object</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello.java14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">obj </span><span style=\"color: #89DDFF\">instanceof</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> str</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Java</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">非String类型</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"switch表达式\"><a href=\"#switch表达式\" class=\"headerlink\" title=\"switch表达式\"></a>switch表达式</h3><p>传统switch声明语句的弊端：</p>\n<ul>\n<li>匹配是自上而下的，如果忘记写break，后面的case语句不论匹配与否都会执行；</li>\n<li>所有的case语句共用一个块范围，在不同的case语句定义的变量名不能重复；</li>\n<li>不能再一个case里写多个执行结果一致的条件；</li>\n<li>整个switch不能作为表达式返回值；</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//常见错误演示</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">month</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">// 3|4|5 用了位运算 11 | 100 | 101结果是111是 7</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">春季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">// 6|7|8用了位运算 110 | 111 | 1000结果是1111是 15</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">夏季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">// 9|10|11用了位运算 1001 | 1010 | 1011结果是1011 是11</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">秋季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">// 12|1|2用了位运算 1100 | 1 | 10结果是1111 是15</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">冬季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">default:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入有误</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"JDK12中预览特性\"><a href=\"#JDK12中预览特性\" class=\"headerlink\" title=\"JDK12中预览特性\"></a>JDK12中预览特性</h4><ul>\n<li>Java 12将会对switch声明语句进行扩展，使用<code>case L -&gt;</code>来代替以前的<code>break;</code>，省去了break语句，避免了因少写break而出错。</li>\n<li>同时将多个case合并到一行，显得简洁、清晰，也更加优雅的表达逻辑分支。</li>\n<li>为了保持兼容性，case条件语句中依然可以使用字符<code>:</code>，但是同一个switch结构里不能混用<code>-&gt;</code>和<code>:</code>，否则编译错误。</li>\n</ul>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test2</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> month </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">month</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">春季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">夏季</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">输入有误</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>JDK12中的写法</strong>：还可以使用变量接收switch表达式的结果</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test3</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> month </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">month</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>JDK13中的写法</strong>：引入了yield关键字，用于返回指定的数据，结束switch结果。</p>\n<p>这意味着，switch表达式(返回值)应该使用yield，switch语句(不返回值)应该使用break。</p>\n<p>和return的区别在于：return会直接跳出当前方法，而yield只会跳出当前switch块。</p>\n<p>使用**<code>case -&gt;</code>**的代码演示，需要加<code>&#123; &#125;</code></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test4</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> month </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">month</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">值未找到</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>使用**<code>case :</code>**的代码演示，不用加<code>&#123; &#125;</code></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test5</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> month </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">month</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">值未找到</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">yield</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"文本块的使用\"><a href=\"#文本块的使用\" class=\"headerlink\" title=\"文本块的使用\"></a>文本块的使用</h3><p>通过在文字框前后加<code>&quot;&quot;&quot;</code>来实现可复制</p>\n<p>mysql举例对比</p>\n<p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E6%96%B0%E8%AF%AD%E6%B3%95%E7%BB%93%E6%9E%84%E6%96%87%E6%9C%AC%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A81.png\"></p>\n<p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E6%96%B0%E8%AF%AD%E6%B3%95%E7%BB%93%E6%9E%84%E6%96%87%E6%9C%AC%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A82.png\"></p>\n<h3 id=\"record的使用\"><a href=\"#record的使用\" class=\"headerlink\" title=\"record的使用\"></a>record的使用</h3><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/record%E7%9A%84%E4%BD%BF%E7%94%A81.png\"></p>\n<p>1、可以在record声明的类中定义静态字段、静态方法、构造器或示例方法。</p>\n<p>2、不能在record声明的类中定义实例字段；类不能声明为abstract；不能声明显式的父类等。</p>\n<p>代码举例</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">record</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> id</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> name</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//可以在record声明的类中定义静态字段、静态方法、构造器或实例方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> info </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我是一个人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">我是一个人</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Person</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">this(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">eat</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">人吃饭</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"密封类\"><a href=\"#密封类\" class=\"headerlink\" title=\"密封类\"></a>密封类</h3><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/%E5%AF%86%E5%B0%81%E7%B1%BB.png\"></p>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//Person是一个密封类，可以被指定的子类所继承。非指定的类不能继承Person类</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">sealed</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">permits</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Student</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">Teacher</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\">Worker</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #464B5D; font-style: italic\">//要求指定的子类必须是final、sealed、non-sealed三者之一</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Student</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #89DDFF\">&#123;&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//Student类不能被继承</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">sealed</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Teacher</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">permits</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SeniorTeacher</span><span style=\"color: #89DDFF\">&#123;&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//Teacher类只能被指定的子类继承</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">non-sealed</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SeniorTeacher</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Teacher</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">non-sealed</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Worker</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Person</span><span style=\"color: #89DDFF\">&#123;&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//Worker类在继承时，没有任何限制</span></span></code></pre></div><hr>\n<h2 id=\"API的变化\"><a href=\"#API的变化\" class=\"headerlink\" title=\"API的变化\"></a>API的变化</h2><h3 id=\"Optional类\"><a href=\"#Optional类\" class=\"headerlink\" title=\"Optional类\"></a>Optional类</h3><p><img src=\"/../images/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/API%E7%9A%84%E5%8F%98%E5%8C%96Optional%E7%B1%BB.png\"></p>\n<p><strong>创建Optional类对象的方法：</strong></p>\n<ul>\n<li><strong>static&lt;T&gt; Optional&lt;T&gt; empty()</strong>: 用来创建一个空的Optional实例</li>\n<li><strong>static&lt;T&gt; Optional&lt;T&gt; of(T value)</strong>: 用来创建一个Optional实例，value必须非空</li>\n<li><strong>static &lt;T&gt; Optional&lt;T&gt; ofNullable(T value)</strong>: 用来创建一个Optional实例，value可能是空，也可能非空</li>\n</ul>\n<p><strong>判断Optional容器中是否包含对象：</strong></p>\n<ul>\n<li><strong>boolean isPresent()</strong>: 判断Optional容器中的值是否存在</li>\n<li><strong>void ifPresent(Consumer&lt;? super T&gt; consumer)</strong>: 判断Optional容器中的值是否存在，如果存在，就对它进行Consumer指定的操作，如果不存在就不做</li>\n</ul>\n<p><strong>获取Optional容器的对象：</strong></p>\n<ul>\n<li><strong>T get()</strong>: 如果调用对象包含值，返回该值。否则抛异常。T get()与of(T value)配合使用</li>\n<li><strong>T orElse(T other)</strong>: orElse(T other)与ofNullable(T value)配合使用，如果Optional容器中非空，就返回所包装值，如果为空，就用orElse(T other)orher指定的默认值(备胎)代替</li>\n<li><strong>T orElseGet(Suppiler&lt;? extends T&gt; other)</strong>: 如果Optional容器中非空，就返回所包装值，如果为空，就用Supplier接口的Lambda表达式提供的值代替</li>\n<li><strong>T orElseThrow(Supplier&lt;? extends X&gt; exceptionSupplier)</strong>: 如果Optional容器中非空，就返回所包装值，如果为空，就抛出你指定的异常类型代替原来的NoSuchElementException</li>\n</ul>\n<p>代码演示</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">test</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> star </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">猫</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    star </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//使用Optional避免空指针的问题</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//1. 实例化</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//ofNullable(T value):用来创建一个Optional实例，value可能是空，也可能非空</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">Optional</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> optional </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Optional</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ofNullable</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">star</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//orElse(T other): 如果Optional实例内部的value属性不为null，则返回value，如果value为null，</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//则返回other</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> otherStar </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">狗</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> finalStar </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> optional</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">orElse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">otherStar</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">finalStar</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h2 id=\"企业真题\"><a href=\"#企业真题\" class=\"headerlink\" title=\"企业真题\"></a>企业真题</h2><h3 id=\"JDK8新特性\"><a href=\"#JDK8新特性\" class=\"headerlink\" title=\"JDK8新特性\"></a>JDK8新特性</h3><p><strong>1、谈谈java8新特性(京*旗下、时*宇，信必*、招*信诺,中*外包，金*软件、阿</strong>巴)**</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">类似问题</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JDK1.8相较于JDK1.7有什么不一-样? (惠+)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">JDK1 . 8的新特性有哪些? Stream API + Lambda表达式，还有吗? (久*国际物流)</span></span></code></pre></div><ul>\n<li>lambda表达式、 Stream API</li>\n<li>jdk7的对比:元空间、HashMap等、新的日期时间API、接口变化等。</li>\n</ul>\n<p><strong>2、JDK1.8在数据结构上发生了哪些变化? (银*数据)</strong></p>\n<ul>\n<li>使用元空间替代永久代。(方法区: jvm规范中提到的结构。</li>\n<li>HotSpot来讲, jdk7: 方法区的落地体现: 永久代。jdk8: 方法区的落地体现:元空间。</li>\n<li>HashMap底层结构</li>\n</ul>\n<p><em><em>3、JDK1.8用的是哪个垃圾回收器? (0</em>*0)</em>*<br>Parallel GC -&gt; jdk9:默认使用G1GC –&gt; ZGC (低延迟)</p>\n<h3 id=\"Lambda表达式-1\"><a href=\"#Lambda表达式-1\" class=\"headerlink\" title=\"Lambda表达式\"></a>Lambda表达式</h3><p><strong>1、Lambda表达式有了解吗，说说如何使用的(0**0)</strong></p>\n<ul>\n<li>在给函数式接口提供实例时，都可以考虑使用lambda表达式。</li>\n<li>基本语法的使用(重要)</li>\n</ul>\n<p><strong>2、什么是函数式接口?有几种函数式接口(阿**巴)</strong><br>略。<br>java.util.function包下定义了丰富的好函数式接口。有4类基础的函数式接口:<br>消费型接口: Consumer<T><br>void accept(T t)<br>供给型接口: Supplier<T> T get()<br>函数型接口: Function&lt;T,R&gt; R apply(T t)<br>判断型接口: Predicate<T> boolean test(T t)</p>\n<h3 id=\"Stream-API-1\"><a href=\"#Stream-API-1\" class=\"headerlink\" title=\"Stream API\"></a>Stream API</h3><p><strong>1、创建Stream的方式(阿**巴)</strong></p>\n<p>三种。<br><strong>2.你讲讲stream表达式是咋用的，干啥的? (中*国际， 上海*网络)</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">Stream API关注的是多个数据的计算(排序、查找、过滤、映射、遍历等)，面向CPU的。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">集合关注的数据的存储，面向内存的。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Stream API之于集合，类似于SQL之于数据表的查询。</span></span></code></pre></div><p><strong>3.集合用Stream流怎么实现过滤? (润*软件)</strong></p>\n<p>filter(Predicate predicate)</p>\n","text":"JDK8-17新特性...","permalink":"/post/JDK8-17新特性","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK8-17新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">如何学习新特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java8%E6%96%B0%E7%89%B9%E6%80%A7%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">Java8新特性简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">Lambda表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">Lambda表达式的使用举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%A0%BC%E5%BC%8F%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">Lambda表达式的格式举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">Lambda表达式的格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AD%E7%A7%8D%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">六种语法格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">Lambda表达式的本质</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">函数式接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%EF%BC%9F\"><span class=\"toc-text\">1、什么是函数式接口？为什么需要函数式接口？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81api%E4%B8%AD%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%85\"><span class=\"toc-text\">2、api中函数式接口所在的包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%814%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">3、4个基本的函数式接口</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Lambda表达式的语法规则总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">方法引用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">方法引用举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">方法引用的理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">方法引用的本质</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">方法引用的格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%83%85%E5%86%B51%EF%BC%9A%E5%AF%B9%E8%B1%A1-%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E9%9D%9E-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">情况1：对象 :: 实例方法 (非)静态方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%83%85%E5%86%B52%EF%BC%9A%E7%B1%BB-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">情况2：类 :: 静态方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%83%85%E5%86%B53%EF%BC%9A%E7%B1%BB-%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">情况3：类 :: 实例方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%99%A8%E5%BC%95%E7%94%A8%E3%80%81%E6%95%B0%E7%BB%84%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">构造器引用、数组引用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%99%A8%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">构造器引用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%99%A8%E5%BC%95%E7%94%A8%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">构造器引用格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%99%A8%E5%BC%95%E7%94%A8%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">构造器引用说明</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%99%A8%E5%BC%95%E7%94%A8%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">构造器引用举例</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">数组引用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Stream-API\"><span class=\"toc-text\">Stream API</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stream-API%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">Stream API说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8Stream-API\"><span class=\"toc-text\">为什么要使用Stream API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stream-API-vs-%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">Stream API vs 集合框架</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stream%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">Stream使用说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stream%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">Stream执行流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Stream%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96\"><span class=\"toc-text\">Stream的实例化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAStream%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%9A%E9%80%9A%E8%BF%87%E9%9B%86%E5%90%88\"><span class=\"toc-text\">创建Stream方式一：通过集合</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAStream%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%9A%E9%80%9A%E8%BF%87%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">创建Stream方式二：通过数组</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAStream%E6%96%B9%E5%BC%8F%E4%B8%89%EF%BC%9A%E9%80%9A%E8%BF%87Stream%E7%9A%84of\"><span class=\"toc-text\">创建Stream方式三：通过Stream的of( )</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%B3%BB%E5%88%97%E4%B8%AD%E9%97%B4%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">一系列中间操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%AD%9B%E9%80%89%E4%B8%8E%E5%88%87%E7%89%87\"><span class=\"toc-text\">1、筛选与切片</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%98%A0%E5%B0%84\"><span class=\"toc-text\">2、映射</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">3、排序</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%88%E6%AD%A2%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">终止操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%8C%B9%E9%85%8D%E4%B8%8E%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">1、匹配与查找</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%BD%92%E7%BA%A6\"><span class=\"toc-text\">2、归约</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">3、收集</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E8%AF%AD%E6%B3%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">新语法结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B9%8Btry-catch%E8%B5%84%E6%BA%90%E5%85%B3%E9%97%AD\"><span class=\"toc-text\">异常处理之try-catch资源关闭</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JDK7%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK7的新特性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JDK9%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK9的新特性</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD\"><span class=\"toc-text\">局部变量类型推断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#instanceof%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">instanceof模式匹配</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#switch%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">switch表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JDK12%E4%B8%AD%E9%A2%84%E8%A7%88%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK12中预览特性</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">文本块的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#record%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">record的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%86%E5%B0%81%E7%B1%BB\"><span class=\"toc-text\">密封类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#API%E7%9A%84%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">API的变化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Optional%E7%B1%BB\"><span class=\"toc-text\">Optional类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%A2%98\"><span class=\"toc-text\">企业真题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JDK8%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JDK8新特性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F-1\"><span class=\"toc-text\">Lambda表达式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stream-API-1\"><span class=\"toc-text\">Stream API</span></a></li></ol></li></ol></li></ol>","author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法学习_数组篇","uid":"929904857381a43e5a2e7edb558ba72e","slug":"算法-数组","date":"2023-11-28T13:34:00.000Z","updated":"2023-12-12T12:31:09.153Z","comments":true,"path":"api/articles/算法-数组.json","keywords":null,"cover":"../images/封面/算法-数组.jpg","text":"本文主要记录算法学习，数组篇章内容。...","permalink":"/post/算法-数组","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}}},"next_post":{"title":"正则表达式","uid":"03a1af7058cec8bb8efe418ed228e157","slug":"正则表达式","date":"2023-11-25T17:20:00.000Z","updated":"2023-12-04T15:10:19.576Z","comments":true,"path":"api/articles/正则表达式.json","keywords":null,"cover":"../images/封面/正则表达式.jpg","text":"本文主要记录Java中正则表达式的学习内容。...","permalink":"/post/正则表达式","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"正则表达式","slug":"正则表达式","count":1,"path":"api/categories/正则表达式.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}}}}