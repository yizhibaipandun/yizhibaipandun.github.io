{"title":"算法学习_字符串篇","uid":"5a4ce9e13a344bde47e43f91b68dbc5a","slug":"算法-字符串","date":"2024-02-04T05:39:00.000Z","updated":"2024-03-28T08:34:40.053Z","comments":true,"path":"api/articles/算法-字符串.json","keywords":null,"cover":"../images/封面/算法-字符串.jpg","content":"<h1 id=\"算法学习-字符串篇\"><a href=\"#算法学习-字符串篇\" class=\"headerlink\" title=\"算法学习_字符串篇\"></a>算法学习_字符串篇</h1><p>学习至：<a href=\"https://programmercarl.com/0344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html\">代码随想录 (programmercarl.com)</a></p>\n<h1 id=\"移除元素\"><a href=\"#移除元素\" class=\"headerlink\" title=\"移除元素\"></a>移除元素</h1><p><a href=\"https://leetcode.cn/problems/remove-element/\">力扣题目链接</a></p>\n<p><strong>题目</strong></p>\n<p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 <strong><a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地</a></strong> 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p>\n<p>不要使用额外的数组空间，你必须仅使用 <code>O(1)</code> 额外空间并 <strong><a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地 </a>修改输入数组</strong>。</p>\n<p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p>\n<p><strong>示例 1：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：nums = [3,2,2,3], val = 3</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：2, nums = [2,2]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</span></span></code></pre></div><p><strong>示例 2：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：nums = [0,1,2,2,3,0,4,2], val = 2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：5, nums = [0,1,3,0,4]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</span></span></code></pre></div><p><strong>思路</strong></p>\n<p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<p>定义快慢指针</p>\n<ul>\n<li>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</li>\n<li>慢指针：指向更新 新数组下标的位置</li>\n</ul>\n<p>删除过程如下：</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/27%E9%A2%98.gif\"></p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">removeElement</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">nums</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">val</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//慢指针定位到需要更新的位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> slow </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//快指针找到不为val值的位置，更新slow</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> fast </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> fast </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> fast</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">fast</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">slow</span><span style=\"color: #89DDFF\">++]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">fast</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> slow</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"反转字符串\"><a href=\"#反转字符串\" class=\"headerlink\" title=\"反转字符串\"></a>反转字符串</h1><p><a href=\"https://leetcode.cn/problems/reverse-string/\">力扣题目链接</a></p>\n<p><strong>题目</strong></p>\n<p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>s</code> 的形式给出。</p>\n<p>不要给另外的数组分配额外的空间，你必须<a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地</a>修改输入数组、使用 O(1) 的额外空间解决这一问题。</p>\n<p><strong>示例 1：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：s = [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span></span></code></pre></div><p><strong>示例 2：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：s = [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</span></span></code></pre></div><p><strong>思路</strong></p>\n<p>对于字符串，我们定义两个指针（也可以说是索引下标），一个从字符串前面，一个从字符串后面，两个指针同时向中间移动，并交换元素。</p>\n<p>以字符串<code>hello</code>为例，过程如下：</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/344%E9%A2%98.gif\"></p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> right </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> temp</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">left </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> right</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            temp </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">left</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">left</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">right</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">right</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> temp</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            left</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            right</span><span style=\"color: #89DDFF\">--;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"替换数字\"><a href=\"#替换数字\" class=\"headerlink\" title=\"替换数字\"></a>替换数字</h1><p><a href=\"https://kamacoder.com/problempage.php?pid=1064\">卡码网题目链接</a></p>\n<p><strong>题目描述</strong></p>\n<p>给定一个字符串 s，它包含小写字母和数字字符，请编写一个函数，将字符串中的字母字符保持不变，而将每个数字字符替换为number。 例如，对于输入字符串 “a1b2c3”，函数应该将其转换为 “anumberbnumbercnumber”。</p>\n<p><strong>输入描述</strong></p>\n<p>输入一个字符串 s,s 仅包含小写字母和数字字符。</p>\n<p><strong>输出描述</strong></p>\n<p>打印一个新的字符串，其中每个数字字符都被替换为了number</p>\n<p><strong>输入示例</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">a1b2c3</span></span></code></pre></div><p><strong>输出示例</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">anumberbnumbercnumber</span></span></code></pre></div><p><strong>提示信息</strong></p>\n<p>数据范围：1 &lt;&#x3D; s.length &lt; 10000。</p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Main</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #BABED8\"> in </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Scanner</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">in</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> in</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">nextLine</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> sb </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StringBuilder</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Character</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">isDigit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">number</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sb</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"翻转字符串里的单词\"><a href=\"#翻转字符串里的单词\" class=\"headerlink\" title=\"翻转字符串里的单词\"></a>翻转字符串里的单词</h1><p><a href=\"https://leetcode.cn/problems/reverse-words-in-a-string/\">力扣题目链接</a></p>\n<p><strong>题目</strong></p>\n<p>给你一个字符串 <code>s</code> ，请你反转字符串中 <strong>单词</strong> 的顺序。</p>\n<p><strong>单词</strong> 是由非空格字符组成的字符串。<code>s</code> 中使用至少一个空格将字符串中的 <strong>单词</strong> 分隔开。</p>\n<p>返回 <strong>单词</strong> 顺序颠倒且 <strong>单词</strong> 之间用单个空格连接的结果字符串。</p>\n<p><strong>注意：</strong>输入字符串 <code>s</code>中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。</p>\n<p><strong>示例 1：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：s = &quot;the sky is blue&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：&quot;blue is sky the&quot;</span></span></code></pre></div><p><strong>示例 2：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：s = &quot;  hello world  &quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：&quot;world hello&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：反转后的字符串中不能存在前导空格和尾随空格。</span></span></code></pre></div><p><strong>示例 3：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：s = &quot;a good   example&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：&quot;example good a&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。</span></span></code></pre></div><p><strong>思路</strong></p>\n<p>想一下，我们将整个字符串都反转过来，那么单词的顺序指定是倒序了，只不过单词本身也倒序了，那么再把单词反转一下，单词不就正过来了。</p>\n<p>所以解题思路如下：</p>\n<ul>\n<li>移除多余空格</li>\n<li>将整个字符串反转</li>\n<li>将每个单词反转</li>\n</ul>\n<p>举个例子，源字符串为：<code>&quot;the sky is blue &quot;</code></p>\n<ul>\n<li>移除多余空格 : <code>&quot;the sky is blue&quot;</code></li>\n<li>字符串反转：<code>&quot;eulb si yks eht&quot;</code></li>\n<li>单词反转：<code>&quot;blue is sky the&quot;</code></li>\n</ul>\n<p>这样我们就完成了翻转字符串里的单词。</p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reverseWords</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//1.去除首尾以及中间多余空格</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> sb </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">removeSpace</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//2.反转整个字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sb</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//3.反转各个单词</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">reverseEachWord</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sb</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//去除首位以及中间多余空格</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">removeSpace</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> end </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//去除首尾空格</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> start</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> end</span><span style=\"color: #89DDFF\">--;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//去除中间多余空格</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> sb </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">StringBuilder</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> c </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//s字符串当前位置不为空格，或者sb字符串最后的位置不为空格则可以添加</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">c </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">||</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            start</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//反转字符串的指定位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">sb</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">start</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> temp </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//交换字符</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setCharAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setCharAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> temp</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            start</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            end</span><span style=\"color: #89DDFF\">--;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//反转各个单词</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reverseEachWord</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">StringBuilder</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">sb</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> end </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//end每次找到单词的末尾</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">end </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                end</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//反转找到的单词</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sb</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> start</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> end </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> end </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            end </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> start </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"右旋字符串\"><a href=\"#右旋字符串\" class=\"headerlink\" title=\"右旋字符串\"></a>右旋字符串</h1><p><a href=\"https://kamacoder.com/problempage.php?pid=1065\">卡码网题目链接</a></p>\n<p><strong>题目描述</strong></p>\n<p>字符串的右旋转操作是把字符串尾部的若干个字符转移到字符串的前面。给定一个字符串 s 和一个正整数 k，请编写一个函数，将字符串中的后面 k 个字符移到字符串的前面，实现字符串的右旋转操作。 </p>\n<p>例如，对于输入字符串 “abcdefg” 和整数 2，函数应该将其转换为 “fgabcde”。</p>\n<p><strong>输入描述</strong></p>\n<p>输入共包含两行，第一行为一个正整数 k，代表右旋转的位数。第二行为字符串 s，代表需要旋转的字符串。</p>\n<p><strong>输出描述</strong></p>\n<p>输出共一行，为进行了右旋转操作后的字符串。</p>\n<p><strong>输入示例</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">abcdefg</span></span></code></pre></div><p><strong>输出示例</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">fgabcde</span></span></code></pre></div><p><strong>提示信息</strong></p>\n<p>数据范围：1 &lt;&#x3D; k &lt; 10000，1 &lt;&#x3D; s.length &lt; 10000;</p>\n<p><strong>思路</strong></p>\n<p><strong>重点</strong>：使用整体反转+局部反转就可以实现反转单词顺序的目的。</p>\n<ol>\n<li>我们需要将字符串右移n位，字符串相当于分成了两个部分，如果n为2，符串相当于分成了两个部分</li>\n<li>右移n位， 就是将第二段放在前面，第一段放在后面，先不考虑里面字符的顺序，是不是整体倒叙就行了。</li>\n<li>此时第一段和第二段的顺序是我们想要的，但里面的字符位置被我们倒叙，那么此时我们在把 第一段和第二段里面的字符再倒叙一把，这样字符顺序就正确了。</li>\n</ol>\n<p>其实，思路就是 通过 整体倒叙，把两段子串顺序颠倒，两个段子串里的的字符在倒叙一把，<strong>负负得正</strong>，这样就不影响子串里面字符的顺序了。</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/55%E9%A2%98.png\"></p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Main</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #BABED8\"> scanner </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Scanner</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">in</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//读取数字和字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">parseInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">scanner</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">nextLine</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> scanner</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">nextLine</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//获取字符串长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//转为char数组，进行反转操作</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> chars </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toCharArray</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//注意：数组从0下标开始</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//反转整个数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//反转从0到右旋位置的字符</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> n</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> len </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//反转剩下的字符</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//打印结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//反转字符串指定位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reverseString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">start</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">start </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> end</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">char</span><span style=\"color: #BABED8\"> temp </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">start</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">end</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> temp</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            start</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            end</span><span style=\"color: #89DDFF\">--;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"实现-strStr\"><a href=\"#实现-strStr\" class=\"headerlink\" title=\"实现 strStr()\"></a>实现 strStr()</h1><p><a href=\"https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/\">力扣题目链接</a></p>\n<p><strong>题目</strong></p>\n<p>给你两个字符串 <code>haystack</code> 和 <code>needle</code> ，请你在 <code>haystack</code> 字符串中找出 <code>needle</code> 字符串的第一个匹配项的下标（下标从 0 开始）。如果 <code>needle</code> 不是 <code>haystack</code> 的一部分，则返回 <code>-1</code> 。</p>\n<p><strong>示例 1：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：haystack = &quot;sadbutsad&quot;, needle = &quot;sad&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：0</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：&quot;sad&quot; 在下标 0 和 6 处匹配。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">第一个匹配项的下标是 0 ，所以返回 0 。</span></span></code></pre></div><p><strong>示例 2：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入：haystack = &quot;leetcode&quot;, needle = &quot;leeto&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出：-1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释：&quot;leeto&quot; 没有在 &quot;leetcode&quot; 中出现，所以返回 -1 。</span></span></code></pre></div><p><strong>思路</strong></p>\n<h2 id=\"前缀表与next数组\"><a href=\"#前缀表与next数组\" class=\"headerlink\" title=\"前缀表与next数组\"></a><strong>前缀表与next数组</strong></h2><p>很多KMP算法的实现都是使用next数组来做回退操作，那么next数组与前缀表有什么关系呢？</p>\n<p>next数组就可以是前缀表，但是很多实现都是把前缀表统一减一（右移一位，初始位置为-1）之后作为next数组。</p>\n<p>其实<strong>这并不涉及到KMP的原理，而是具体实现，next数组既可以就是前缀表，也可以是前缀表统一减一（右移一位，初始位置为-1）。</strong></p>\n<p><strong>使用next数组来匹配</strong></p>\n<p>有了next数组，就可以根据next数组来 匹配文本串s，和模式串t了。</p>\n<p>注意next数组是新前缀表（旧前缀表统一减一了）。</p>\n<p>匹配过程动画如下：</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP1.gif\"></p>\n<h2 id=\"构造next数组\"><a href=\"#构造next数组\" class=\"headerlink\" title=\"构造next数组\"></a><strong>构造next数组</strong></h2><p>我们定义一个函数getNext来构建next数组，函数参数为指向next数组的指针，和一个字符串。 代码如下：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getNext</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> next</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">const</span><span style=\"color: #BABED8\"> string</span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><p><strong>构造next数组其实就是计算模式串s，前缀表的过程。</strong> 主要有如下三步：</p>\n<ol>\n<li>初始化</li>\n<li>处理前后缀不相同的情况</li>\n<li>处理前后缀相同的情况</li>\n</ol>\n<p>接下来我们详解一下。</p>\n<h3 id=\"1、初始化\"><a href=\"#1、初始化\" class=\"headerlink\" title=\"1、初始化\"></a><strong>1、初始化</strong></h3><p>定义两个指针i和j，j指向前缀末尾位置，i指向后缀末尾位置。</p>\n<p>然后还要对next数组进行初始化赋值，如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><p>j 为什么要初始化为 -1呢，因为之前说过 前缀表要统一减一的操作仅仅是其中的一种实现，我们这里选择j初始化为-1，下文我还会给出j不初始化为-1的实现代码。</p>\n<p>next[i] 表示 i（包括i）之前最长相等的前后缀长度（其实就是j）</p>\n<p>所以初始化next[0] &#x3D; j 。</p>\n<h3 id=\"2、处理前后缀不相同的情况\"><a href=\"#2、处理前后缀不相同的情况\" class=\"headerlink\" title=\"2、处理前后缀不相同的情况\"></a><strong>2、处理前后缀不相同的情况</strong></h3><p>因为j初始化为-1，那么i就从1开始，进行s[i] 与 s[j+1]的比较。</p>\n<p>所以遍历模式串s的循环下标i 要从 1开始，代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span></code></pre></div><p>如果 s[i] 与 s[j+1]不相同，也就是遇到 前后缀末尾不相同的情况，就要向前回退。</p>\n<p>怎么回退呢？</p>\n<p>next[j]就是记录着j（包括j）之前的子串的相同前后缀的长度。</p>\n<p>那么 s[i] 与 s[j+1] 不相同，就要找 j+1前一个元素在next数组里的值（就是next[j]）。</p>\n<p>所以，处理前后缀不相同的情况代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 前后缀不相同了</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #464B5D; font-style: italic\"> // 向前回退</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"3、处理前后缀相同的情况\"><a href=\"#3、处理前后缀相同的情况\" class=\"headerlink\" title=\"3、处理前后缀相同的情况\"></a><strong>3、处理前后缀相同的情况</strong></h3><p>如果 s[i] 与 s[j + 1] 相同，那么就同时向后移动i 和j 说明找到了相同的前后缀，同时还要将j（前缀的长度）赋给next[i], 因为next[i]要记录相同前后缀的长度。</p>\n<p>代码如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">if (s[i] == s[j + 1]) &#123; // 找到相同的前后缀</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    j++;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">next[i] = j;</span></span></code></pre></div><p>最后整体构建next数组的函数代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getNext</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int*</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">next</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 注意i从1开始</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 前后缀不相同了</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #464B5D; font-style: italic\"> // 向前回退</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 找到相同的前后缀</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            j</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #464B5D; font-style: italic\"> // 将j（前缀的长度）赋给next[i]</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>代码构造next数组的逻辑流程动画如下。得到了next数组之后，就要用这个来做匹配了。</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP2.gif\"></p>\n<h2 id=\"使用next数组来做匹配\"><a href=\"#使用next数组来做匹配\" class=\"headerlink\" title=\"使用next数组来做匹配\"></a>使用next数组来做匹配</h2><p>在文本串s里 找是否出现过模式串t。</p>\n<p>定义两个下标j 指向模式串起始位置，i指向文本串起始位置。</p>\n<p>那么j初始值依然为-1，为什么呢？ <strong>依然因为next数组里记录的起始位置为-1。</strong></p>\n<p>i就从0开始，遍历文本串，代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><p>接下来就是 s[i] 与 t[j + 1] （因为j从-1开始的） 进行比较。</p>\n<p>如果 s[i] 与 t[j + 1] 不相同，j就要从next数组里寻找下一个匹配的位置。</p>\n<p>代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> t</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>如果 s[i] 与 t[j + 1] 相同，那么i 和 j 同时向后移动， 代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> t</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    j</span><span style=\"color: #89DDFF\">++;</span><span style=\"color: #464B5D; font-style: italic\"> // i的增加在for循环里</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>如何判断在文本串s里出现了模式串t呢，如果j指向了模式串t的末尾，那么就说明模式串t完全匹配文本串s里的某个子串了。</p>\n<p>本题要在文本串字符串中找出模式串出现的第一个位置 (从0开始)，所以返回当前在文本串匹配模式串的位置i 减去 模式串的长度，就是文本串字符串中出现模式串的第一个位置。</p>\n<p>代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>那么使用next数组，用模式串匹配文本串的整体代码如下：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #464B5D; font-style: italic\"> // 因为next数组里记录的起始位置为-1</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 注意i就从0开始</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 不匹配</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #464B5D; font-style: italic\"> // j 寻找之前匹配的位置</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 匹配，j和i同时向后移动</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        j</span><span style=\"color: #89DDFF\">++;</span><span style=\"color: #464B5D; font-style: italic\"> // i的增加在for循环里</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #464B5D; font-style: italic\"> // 文本串s里出现了模式串t</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">t</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">size</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">strStr</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">haystack</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">needle</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> next </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//构造模式串的前缀表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">getNext</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> needle</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//遍历主串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> haystack</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//不匹配</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> haystack</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> haystack</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">())</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> needle</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #464B5D; font-style: italic\">//构造前缀表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">getNext</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">next</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//处理前后缀不相同的情况</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #BABED8\"> </span><span style=\"color: #464B5D; font-style: italic\">//不相同向前回退</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//前后缀相同的情况</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//给前缀表赋值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"重复的子字符串\"><a href=\"#重复的子字符串\" class=\"headerlink\" title=\"重复的子字符串\"></a>重复的子字符串</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>KMP算法还能干这个</p></blockquote>\n<p><a href=\"https://leetcode.cn/problems/repeated-substring-pattern/description/\">459. 重复的子字符串 - 力扣（LeetCode）</a></p>\n<p><strong>题目</strong></p>\n<p>给定一个非空的字符串 <code>s</code> ，检查是否可以通过由它的一个子串重复多次构成。</p>\n<p><strong>示例 1:</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入: s = &quot;abab&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出: true</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释: 可由子串 &quot;ab&quot; 重复两次构成。</span></span></code></pre></div><p><strong>示例 2:</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入: s = &quot;aba&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出: false</span></span></code></pre></div><p><strong>示例 3:</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">输入: s = &quot;abcabcabcabc&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">输出: true</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">解释: 可由子串 &quot;abc&quot; 重复四次构成。 (或子串 &quot;abcabc&quot; 重复两次构成。)</span></span></code></pre></div><p><strong>思路</strong></p>\n<p>在一个串中查找是否出现过另一个串，这是KMP的看家本领。那么寻找重复子串怎么也涉及到KMP算法了呢？</p>\n<p>KMP算法中next数组为什么遇到字符不匹配的时候可以找到上一个匹配过的位置继续匹配，靠的是有计算好的前缀表。 前缀表里，统计了各个位置为终点字符串的最长相同前后缀的长度。</p>\n<p>那么 最长相同前后缀和重复子串的关系又有什么关系呢。</p>\n<ul>\n<li>前缀是指不包含最后一个字符的所有以第一个字符开头的连续子串；</li>\n<li>后缀是指不包含第一个字符的所有以最后一个字符结尾的连续子串</li>\n</ul>\n<p>在由重复子串组成的字符串中，最长相等前后缀不包含的子串就是最小重复子串，这里拿字符串s：abababab 来举例，ab就是最小重复单位，如图所示：</p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/459%E9%A2%981.png\"></p>\n<p><strong>如何找到最小重复子串</strong></p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/459%E9%A2%982.png\"></p>\n<p>步骤一：因为这是相等的前缀和后缀，t[0] 与 k[0]相同， t[1] 与 k[1]相同，所以 s[0] 一定和 s[2]相同，s[1] 一定和 s[3]相同，即：，s[0]s[1]与s[2]s[3]相同 。</p>\n<p>步骤二： 因为在同一个字符串位置，所以 t[2] 与 k[0]相同，t[3] 与 k[1]相同。</p>\n<p>步骤三： 因为 这是相等的前缀和后缀，t[2] 与 k[2]相同 ，t[3]与k[3] 相同，所以，s[2]一定和s[4]相同，s[3]一定和s[5]相同，即：s[2]s[3] 与 s[4]s[5]相同。</p>\n<p>步骤四：循环往复。</p>\n<p>所以字符串s，s[0]s[1]与s[2]s[3]相同， s[2]s[3] 与 s[4]s[5]相同，s[4]s[5] 与 s[6]s[7] 相同。</p>\n<p>正是因为 最长相等前后缀的规则，当一个字符串由重复子串组成的，最长相等前后缀不包含的子串就是最小重复子串。</p>\n<p><strong>重要推理</strong></p>\n<ol>\n<li>假设字符串s使用多个重复子串构成（这个子串是最小重复单位），重复出现的子字符串长度是x，所以s是由n * x组成。</li>\n<li>因为字符串s的最长相同前后缀的长度一定是不包含s本身，所以 最长相同前后缀长度必然是m * x，而且 n - m &#x3D; 1。</li>\n<li>所以如果 nx % (n - m)x &#x3D; 0，就可以判定有重复出现的子字符串。</li>\n</ol>\n<p>数组长度为：len。</p>\n<p>如果<code>len % (len - (next[len - 1] + 1)) == 0 </code>，则说明数组的长度正好可以被 (数组长度-最长相等前后缀的长度) 整除 ，说明该字符串有重复的子字符串。</p>\n<p><strong>如图：</strong></p>\n<p><img src=\"/../images/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/459%E9%A2%983.png\"></p>\n<p>next[len - 1] &#x3D; 7，next[len - 1] + 1 &#x3D; 8，8就是此时字符串asdfasdfasdf的最长相同前后缀的长度。</p>\n<p><code>(len - (next[len - 1] + 1)) </code>也就是： 12(字符串的长度) - 8(最长公共前后缀的长度) &#x3D; 4， 4正好可以被 12(字符串的长度) 整除，所以说明有重复的子字符串（asdf）。</p>\n<p><strong>代码实现</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-ocean\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">boolean</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">repeatedSubstringPattern</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">s</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//处理边界</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">equals</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> len </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">// 原串加个空格(哨兵)，使下标从1开始，这样j从0开始，也不用初始化了</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">char</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> chars </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toCharArray</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//创建前缀表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> next </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//构造next数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> len</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//匹配不成功</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> chars</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> chars</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//匹配成功</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">chars</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> chars</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                j</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #464B5D; font-style: italic\">//更新next数组的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #464B5D; font-style: italic\">//最后判断是否是重复的子字符串，这里 next[len] 即代表next数组末尾的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">len</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">len </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> next</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">len</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><hr>\n<h1 id=\"字符串总结\"><a href=\"#字符串总结\" class=\"headerlink\" title=\"字符串总结\"></a>字符串总结</h1><h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>在<em><strong>344.反转字符串</strong></em>，使用双指针法实现了反转字符串的操作，<strong>双指针法在数组，链表和字符串中很常用。</strong></p>\n<p>接着在<em><strong>字符串：替换空格</strong></em>，同样还是使用双指针法在时间复杂度O(n)的情况下完成替换空格。</p>\n<p><strong>其实很多数组填充类的问题，都可以先预先给数组扩容带填充后的大小，然后在从后向前进行操作。</strong></p>\n<p>那么针对数组删除操作的问题，其实在<em><strong>27. 移除元素</strong></em>中就已经提到了使用双指针法进行移除操作。</p>\n<p>同样的道理在<em><strong>151.翻转字符串里的单词</strong></em>中我们使用O(n)的时间复杂度，完成了删除冗余空格。</p>\n<p>一些同学会使用for循环里调用库函数erase来移除元素，这其实是O(n^2)的操作，因为erase就是O(n)的操作，所以这也是典型的不知道库函数的时间复杂度，上来就用的案例了。</p>\n<h2 id=\"反转系列\"><a href=\"#反转系列\" class=\"headerlink\" title=\"反转系列\"></a>反转系列</h2><p>在反转上还可以在加一些玩法，其实考察的是对代码的掌控能力。</p>\n<p><em><strong>541.反转字符串II</strong></em>中，一些同学可能为了处理逻辑：每隔2k个字符的前k的字符，写了一堆逻辑代码或者再搞一个计数器，来统计2k，再统计前k个字符。</p>\n<p>其实<strong>当需要固定规律一段一段去处理字符串的时候，要想想在在for循环的表达式上做做文章</strong>。</p>\n<p>只要让 i +&#x3D; (2 * k)，i 每次移动 2 * k 就可以了，然后判断是否需要有反转的区间。</p>\n<p>因为要找的也就是每2 * k 区间的起点，这样写程序会高效很多。</p>\n<p>在<em><strong>151.翻转字符串里的单词</strong></em>中要求翻转字符串里的单词，这道题目可以说是综合考察了字符串的多种操作。是考察字符串的好题。</p>\n<p>这道题目通过 <strong>先整体反转再局部反转</strong>，实现了反转字符串里的单词。</p>\n<p>后来发现反转字符串还有一个牛逼的用处，就是达到左旋的效果。</p>\n<p>在<a href=\"https://programmercarl.com/%E5%89%91%E6%8C%87Offer58-II.%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html\">字符串：反转个字符串还有这个用处？</a>中，我们通过<strong>先局部反转再整体反转</strong>达到了左旋的效果。</p>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>KMP的主要思想是<strong>当出现字符串不匹配时，可以知道一部分之前已经匹配的文本内容，可以利用这些信息避免从头再去做匹配了。</strong></p>\n<p>KMP的精髓所在就是前缀表，在<a href=\"https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html\">KMP精讲</a>中提到了，什么是KMP，什么是前缀表，以及为什么要用前缀表。</p>\n<p>前缀表：起始位置到下标i之前（包括i）的子串中，有多大长度的相同前缀后缀。</p>\n<p>那么使用KMP可以解决两类经典问题：</p>\n<ol>\n<li>匹配问题：<a href=\"https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html\">28. 实现 strStr()</a></li>\n<li>重复子串问题：<a href=\"https://programmercarl.com/0459.%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html\">459.重复的子字符串</a></li>\n</ol>\n<p>再一次强调了什么是前缀，什么是后缀，什么又是最长相等前后缀。</p>\n<p>前缀：指不包含最后一个字符的所有以第一个字符开头的连续子串。</p>\n<p>后缀：指不包含第一个字符的所有以最后一个字符结尾的连续子串。</p>\n<p>然后<strong>针对前缀表到底要不要减一，这其实是不同KMP实现的方式</strong>，我们在<a href=\"https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html\">KMP精讲</a>中针对之前两个问题，分别给出了两个不同版本的的KMP实现。</p>\n<p>其中主要<strong>理解j&#x3D;next[x]这一步最为关键！</strong></p>\n","text":"本文主要记录算法学习，字符串篇章内容。...","permalink":"/post/算法-字符串","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":7,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AF%87\"><span class=\"toc-text\">算法学习_字符串篇</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">移除元素</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">反转字符串</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9B%BF%E6%8D%A2%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">替换数字</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D\"><span class=\"toc-text\">翻转字符串里的单词</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%B3%E6%97%8B%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">右旋字符串</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0-strStr\"><span class=\"toc-text\">实现 strStr()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BC%80%E8%A1%A8%E4%B8%8Enext%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">前缀表与next数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0next%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">构造next数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">1、初始化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%A4%84%E7%90%86%E5%89%8D%E5%90%8E%E7%BC%80%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E6%83%85%E5%86%B5\"><span class=\"toc-text\">2、处理前后缀不相同的情况</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%A4%84%E7%90%86%E5%89%8D%E5%90%8E%E7%BC%80%E7%9B%B8%E5%90%8C%E7%9A%84%E6%83%85%E5%86%B5\"><span class=\"toc-text\">3、处理前后缀相同的情况</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8next%E6%95%B0%E7%BB%84%E6%9D%A5%E5%81%9A%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">使用next数组来做匹配</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">重复的子字符串</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">字符串总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95\"><span class=\"toc-text\">双指针法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E8%BD%AC%E7%B3%BB%E5%88%97\"><span class=\"toc-text\">反转系列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#KMP\"><span class=\"toc-text\">KMP</span></a></li></ol></li></ol>","author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法学习_双指针篇","uid":"b5f25607708364dec62476e3b1407a22","slug":"算法-双指针法","date":"2024-03-05T05:27:00.000Z","updated":"2024-03-28T08:34:27.354Z","comments":true,"path":"api/articles/算法-双指针法.json","keywords":null,"cover":"../images/封面/算法-双指针法.jpg","text":"本文主要记录算法学习，双指针法内容。...","permalink":"/post/算法-双指针法","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":7,"path":"api/tags/算法.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}}},"next_post":{"title":"算法学习_哈希表篇","uid":"d4dcb880244ae82689abb579db94c1da","slug":"算法-哈希表","date":"2024-01-19T09:50:00.000Z","updated":"2024-03-28T08:34:58.790Z","comments":true,"path":"api/articles/算法-哈希表.json","keywords":null,"cover":"../images/封面/算法-哈希表.jpg","text":"本文主要记录算法学习，哈希表篇章内容。...","permalink":"/post/算法-哈希表","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":7,"path":"api/tags/算法.json"}],"author":{"name":"白","slug":"blog-author","avatar":"../images/头像.png","link":"/","description":"有些事不是看到了希望才去坚持，而是因为坚持才会看到希望。","socials":{"github":"https://github.com/yizhibaipandun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilbil.svg","link":"https://space.bilibili.com/323925937"},"QQ":{"icon":"/svg/QQ.svg","link":"https://qm.qq.com/cgi-bin/qm/qr?k=ykBaP-4ljQVftPX39IoO4LtbkAMd7Jvd&s=1"}}}}}}